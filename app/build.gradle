apply plugin: 'com.android.application'
apply from: 'configuration.gradle'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion
    defaultConfig {
        applicationId "com.mobilife.gsb.admin"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        jackOptions {
            enabled false
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            debuggable true
            testCoverageEnabled = true
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix ".mock"
            versionNameSuffix "-mock"
            buildConfigField "boolean", "MOCK_VERSION", "true"
            resValue "string", "app_name", "GSB Admin Mock"
        }

        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "boolean", "MOCK_VERSION", "false"
            resValue "string", "app_name", "GSB Admin DEV"
        }

        sit {
            applicationIdSuffix ".sit"
            versionNameSuffix "-sit"
            buildConfigField "boolean", "MOCK_VERSION", "false"
            resValue "string", "app_name", "GSB Admin SIT"
        }

        uat {
            applicationIdSuffix ".uat"
            versionNameSuffix "-uat"
            buildConfigField "boolean", "MOCK_VERSION", "false"
            resValue "string", "app_name", "GSB Admin UAT"
        }

        prd {
            applicationIdSuffix ".prd"
            versionNameSuffix "-prd"
            buildConfigField "boolean", "MOCK_VERSION", "false"
            resValue "string", "app_name", "GSB Admin"
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'

        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${supportLibraryVersion}"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /* Android */
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:support-annotations:${supportLibraryVersion}"
    compile "com.android.support:percent:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"

    /* Dagger */
    compile "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    /* Butterknife */
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    /* Retrofit */
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "com.squareup.retrofit2:retrofit-mock:${retrofitVersion}"

    /* Okhttp */
    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    /* Rxjava */
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'

    /* Event bus */
    compile "org.greenrobot:eventbus:${eventBusVersion}"

    /* Permission */
    compile('com.github.hotchemi:permissionsdispatcher:2.4.0') {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'

    /* UI */
    compile 'com.afollestad.material-dialogs:core:0.9.1.0'

    /* UI Test */
    androidTestCompile "junit:junit:4.12"
    androidTestCompile "org.mockito:mockito-core:2.8.9"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test:runner:$runnerVersion"
    androidTestCompile "com.android.support.test:rules:$runnerVersion"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$dexmakerVersion"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$dexmakerVersion"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$dexmakerVersion"

    /* Unit tests dependencies */
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.hamcrest:hamcrest-core:$hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-integration:$hamcrestVersion"

}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
